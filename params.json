{"name":"Puppet Explorer","tagline":"Puppet web interface written in CoffeeScript using AngularJS","body":"### Overview\r\n\r\nPuppet Explorer is a web application for PuppetDB that lets you explore your\r\nPuppet data.\r\nIt is made using AngularJS and CoffeeScript and runs entirely on the client\r\nside, so the only backend that is needed is PuppetDB itself and a web server to\r\nshare the static resources.\r\n\r\nIt has the same query language as the popular Puppet module\r\n[dalen-puppetdbquery](https://forge.puppetlabs.com/dalen/puppetdbquery).\r\nThis lets you easily filter for a selection of nodes and show the events or\r\nfacts for only them. So you can handle hosts as groups without needing to have\r\npredefined groups, just make them up as you need and click on the pie charts to\r\ndrill down further. The JavaScript version of this query parser is available as\r\na separate component so you can use it in your own projects easily,\r\n[node-puppetdbquery](https://github.com/dalen/node-puppetdbquery).\r\n\r\nAll views in the application are made to be able to link directly to them, so\r\nit is easy to share information you find with coworkers.\r\n\r\nIt has support for multiple PuppetDB servers.\r\n\r\n### Dependencies\r\n\r\nIt is using the V4 PuppetDB API from PuppetDB 2.1. Version 1.0.0 works with\r\nPuppetDB 2.0, but the current version only works with PuppetDB 2.1.\r\n\r\n### Screenshots\r\n\r\n##### The dashboard:\r\n![The dashboard](https://raw.githubusercontent.com/spotify/puppetexplorer/master/screenshots/dashboard.png)\r\n\r\n##### Node search:\r\n![Node search](https://raw.githubusercontent.com/spotify/puppetexplorer/master/screenshots/nodelist.png)\r\n\r\n##### Events view and filtering:\r\n![Events view](https://raw.githubusercontent.com/spotify/puppetexplorer/master/screenshots/events.png)\r\n\r\n##### Facts view:\r\n![Facts view](https://raw.githubusercontent.com/spotify/puppetexplorer/master/screenshots/facts.png)\r\n\r\n### Demo\r\n\r\nTry it out live with some made up AWS data at\r\n[demo.puppetexplorer.io](http://demo.puppetexplorer.io)\r\n\r\n### Development and local testing\r\n\r\nInstall all required dependencies using `npm install`, then you can build the\r\napplication using `grunt`. The results will be located in the `dist` directory.\r\n\r\nUse `grunt serve` to start a local web server pointing to a local PuppetDB\r\ninstance.\r\n\r\nOptionally you can use the `--puppetdb=url` option to specify a URL to proxy\r\nPuppetDB connections to. Another way is to create a SSH tunnel to your PuppetDB\r\nserver, `ssh -L 8080:localhost:8080 puppetdb.example.com`.\r\n\r\nWith `grunt watch` it will rebuild any source files that changes and put the\r\nresults in the `dist` directory.\r\n\r\nTo build a Debian package use `grunt build_debian`, this requires the\r\n`devscripts` and `debhelper` packages to be installed.\r\n\r\n### See also\r\n\r\n * [Puppetboard](https://github.com/nedap/puppetboard)\r\n * [Puppet Enterprise](http://puppetlabs.com/puppet/puppet-enterprise)\r\n","google":"UA-53728049-2","note":"Don't delete this file! It's used internally to help with page regeneration."}